{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","nextPage","prevPage","visibleItems","onPageChange","pageNumbers","i","Math","ceil","push","isPrevActive","isNextActive","length","className","cn","disabled","href","tabIndex","onClick","map","page","active","item","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","setPerPage","lastIndex","firstIndex","slice","itemsRangeInfo","id","value","onChange","event","target","htmlFor","prev","ReactDOM","render","document","getElementById"],"mappings":"sNAaaA,EAAwB,SAAC,GAYpC,IAJK,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,QACAC,EAKI,EALJA,YACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEMC,EAAc,GAGXC,EAAI,EAAGA,EAAIC,KAAKC,KAAKV,EAAQC,GAAW,EAAGO,IAClDD,EAAYI,KAAKH,GAGnB,IAAMI,EAA+B,IAAhBV,EACfW,EAAeX,IAAgBK,EAAYA,EAAYO,OAAS,GAEtE,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAChB,CAAEC,SAAUL,IADd,SAGE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACLC,SAAUP,GAAgB,EAAI,EAC9B,gBAAeA,EACfQ,QAAS,WACFR,GACHR,KARN,oBAeDG,EAAYc,KAAI,SAACC,GAAD,OACf,oBACEP,UAAWC,IAAG,YACZ,CAAEO,OAAQD,IAASpB,IAFvB,SAKE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAI,WAAMI,GACVF,QAAS,kBAAMd,EAAagB,IAJ9B,SAMGA,KAREA,MAYT,oBAAIP,UAAWC,IAAG,YAChB,CAAEC,SAAUJ,IADd,SAGE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACLC,SAAUN,GAAgB,EAAI,EAC9B,gBAAeA,EACfO,QAAS,WACFP,GACHV,KARN,uBAgBJ,6BACGE,EAAagB,KAAI,SAAAG,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCrFXC,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQjB,KAAKkB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAgBC,mBAASP,GAAlBzB,EAAP,oBACA,EAAsCgC,mBAAS,GAA/C,mBAAO9B,EAAP,KAAoB+B,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAO/B,EAAP,KAAgBiC,EAAhB,KAmBMC,EAAYjC,EAAcD,EAC1BmC,EAAaD,EAAYlC,EAEzBI,EAAeL,EAAMqC,MAAMD,EAAYD,GACvCG,EAAiBF,EAAa/B,EAAaS,OAEjD,OACE,sBAAKC,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,mBACiCkC,EAAa,EAD9C,cACqDE,EADrD,eAC0EtC,EAAMc,OADhF,OAIA,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOvC,EACPwC,SAlCW,SAACC,GACpBR,GAAYQ,EAAMC,OAAOH,OACzBP,EAAe,IA2BT,UAQE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MAAOA,EAAMc,OACbb,QAASA,EACTC,YAAaA,EACbG,aAAcA,EACdC,aA1Da,SAACgB,GAClBW,EAAeX,IA0DXlB,SA9CW,WACf6B,GAAe,SAAAY,GAAI,OAAIA,EAAO,MA8C1B1C,SAnDW,WACf8B,GAAe,SAAAY,GAAI,OAAIA,EAAO,YErBlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5d1480aa.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  nextPage: () => void;\n  prevPage: () => void;\n  visibleItems:string[];\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  nextPage,\n  prevPage,\n  visibleItems,\n  onPageChange,\n}) => {\n  const pageNumbers = [];\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 1; i < Math.ceil(total / perPage) + 1; i++) {\n    pageNumbers.push(i);\n  }\n\n  const isPrevActive = currentPage === 1;\n  const isNextActive = currentPage === pageNumbers[pageNumbers.length - 1];\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item',\n          { disabled: isPrevActive })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            tabIndex={isPrevActive ? -1 : 0}\n            aria-disabled={isPrevActive}\n            onClick={() => {\n              if (!isPrevActive) {\n                prevPage();\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pageNumbers.map((page) => (\n          <li\n            className={cn('page-item',\n              { active: page === currentPage })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item',\n          { disabled: isNextActive })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            tabIndex={isNextActive ? -1 : 0}\n            aria-disabled={isNextActive}\n            onClick={() => {\n              if (!isNextActive) {\n                nextPage();\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {visibleItems.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n\n      </ul>\n    </>\n  );\n};\n","import './App.css';\nimport React, { useState } from 'react';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState(items);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const handlePage = (page:number) => {\n    setCurrentPage(page);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const nextPage = () => {\n    setCurrentPage(prev => prev + 1);\n  };\n\n  const prevPage = () => {\n    setCurrentPage(prev => prev - 1);\n  };\n\n  const lastIndex = currentPage * perPage;\n  const firstIndex = lastIndex - perPage;\n\n  const visibleItems = total.slice(firstIndex, lastIndex);\n  const itemsRangeInfo = firstIndex + visibleItems.length;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstIndex + 1} - ${itemsRangeInfo} of ${total.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChange}\n\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        visibleItems={visibleItems}\n        onPageChange={handlePage}\n        prevPage={prevPage}\n        nextPage={nextPage}\n      />\n\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}